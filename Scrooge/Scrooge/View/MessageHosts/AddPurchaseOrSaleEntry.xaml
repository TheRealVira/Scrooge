<materialDesign:DialogHost x:Class="Scrooge.AddPurchaseOrSaleEntry"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:local="clr-namespace:Scrooge"
                           xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                           xmlns:system="clr-namespace:System;assembly=mscorlib"
                           mc:Ignorable="d"
                           d:DesignHeight="500" d:DesignWidth="500"
                           Background="{DynamicResource MaterialDesignPaper}"
                           FontFamily="{StaticResource DefaultFont}"
                           TextElement.Foreground="{DynamicResource MaterialDesignBody}" MaxWidth="500" MaxHeight="500"
                           MinWidth="500" MinHeight="500">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!--Title-->
            <RowDefinition Height="Auto" />
            <!--Tools-->
            <RowDefinition Height="*" />
            <!--List (of cards)-->
        </Grid.RowDefinitions>

        <materialDesign:ColorZone Grid.Row="0" VerticalAlignment="Top" Padding="3" Margin="8" CornerRadius="8"
                                  FontSize="25" materialDesign:ShadowAssist.ShadowDepth="Depth3"
                                  HorizontalAlignment="Stretch">
            <TextBlock TextWrapping="Wrap" Text="New Sale- / Purchase- Entry" VerticalAlignment="Center"
                       HorizontalAlignment="Center" />
        </materialDesign:ColorZone>

        <TextBlock Grid.Row="1" Margin="8,10,358,0" Width="Auto" VerticalAlignment="Top" Text="The RE-Date:" />
        <DatePicker Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="292,6,0,0" Width="200"
                    Name="MyREDate" materialDesign:TextFieldAssist.Hint="Pick a date">
            <DatePicker.Text>
                <Binding Path="REDate" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </DatePicker.Text>
        </DatePicker>

        <TextBlock Grid.Row="2" Margin="8,20,358,0" Width="Auto" VerticalAlignment="Top" Text="The Entry-Date:" />
        <DatePicker Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="292,16,0,0" Width="200"
                    Name="MyEntryDate" materialDesign:TextFieldAssist.Hint="Pick a date">
            <DatePicker.Text>
                <Binding Path="EntryDate" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </DatePicker.Text>
        </DatePicker>

        <ComboBox VerticalAlignment="Top" IsEditable="True" HorizontalAlignment="Stretch" Name="MyGroupName"
                  materialDesign:TextFieldAssist.Hint="Groupname"
                  Style="{DynamicResource MaterialDesignFloatingHintComboBox}" Margin="8,46,8,0" FontSize="18"
                  Grid.Row="2">
            <ComboBox.Text>
                <Binding Path="GroupName" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>

        <ComboBox VerticalAlignment="Top" HorizontalAlignment="Stretch" Name="MyType"
                  materialDesign:TextFieldAssist.Hint="Type"
                  Style="{DynamicResource MaterialDesignFloatingHintComboBox}" Margin="8,111,8,0" FontSize="18"
                  Grid.Row="2">
            <ComboBox.Text>
                <Binding Path="Type" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>

        <TextBox VerticalAlignment="Top" HorizontalAlignment="Stretch" materialDesign:TextFieldAssist.Hint="Text"
                 Name="MyText" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="8,174,8,0"
                 FontSize="18"
                 Grid.Row="2">
            <TextBox.Text>
                <Binding Path="Text" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBox VerticalAlignment="Top" HorizontalAlignment="Stretch" materialDesign:TextFieldAssist.Hint="Receipt"
                 Name="MyReceipt" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="8,248,380,0"
                 FontSize="18"
                 Grid.Row="2">
            <TextBox.Text>
                <Binding Path="Receipt" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBox VerticalAlignment="Top" HorizontalAlignment="Stretch" materialDesign:TextFieldAssist.Hint="Tax"
                 Name="MySt" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="153,248,235,0"
                 FontSize="18"
                 Grid.Row="2" PreviewTextInput="UIElement_OnPreviewTextInput">
            <TextBox.Text>
                <Binding Path="St" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBox VerticalAlignment="Top" HorizontalAlignment="Stretch" materialDesign:TextFieldAssist.Hint="Value"
                 Name="MyValue" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="290,248,8,0"
                 FontSize="18"
                 Grid.Row="2" PreviewTextInput="UIElement_OnPreviewTextInput">
            <TextBox.Text>
                <Binding Path="Value" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <CheckBox Content="Is tax payment" Name="TaxPayment" Click="ButtonBase_OnClick" Margin="8,322,-8,38"
                  Grid.Row="2">
            <CheckBox.IsChecked>
                <Binding Path="IsTaxPayment" UpdateSourceTrigger="PropertyChanged" />
            </CheckBox.IsChecked>
        </CheckBox>

        <Button IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Grid.Row="2"
                VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,87,8"
                materialDesign:ShadowAssist.ShadowDepth="Depth2">
            <Button.CommandParameter>
                <system:Boolean>True</system:Boolean>
            </Button.CommandParameter>
            Add
        </Button>

        <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Grid.Row="2"
                VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="8"
                materialDesign:ShadowAssist.ShadowDepth="Depth2">
            <Button.CommandParameter>
                <system:Boolean>False</system:Boolean>
            </Button.CommandParameter>
            Cancel
        </Button>
    </Grid>
</materialDesign:DialogHost>